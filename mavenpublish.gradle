apply plugin: 'maven-publish'

//task generateSourcesJar(type: Jar) {
//    archiveClassifier.set('sources')
//}


afterEvaluate {
    publishing {
        repositories {
            // 远程仓库
            maven {
                allowInsecureProtocol(true)
                name('gankao')
                url = 'https://packages.aliyun.com/maven/repository/2047378-release-EBo6g1/'
                //私有maven库地址(这个是“非生成库”版本，可以设置成生产库的url)
                credentials {
                    username '6200b57c41b06a3cdcd03e50' // 账号
                    password 'N=cgp(QEQ]rQ'            // 密码
                }
            }
        }
        publications {
            upload2Maven(MavenPublication) {
                from components.release
                groupId GROUP
                artifactId ARTIFACT_ID
                version VERSION

                // 依赖 bundleReleaseAar 任务，并上传其产出的aar
//                afterEvaluate { artifact(tasks.getByName("bundleReleaseAar")) }
//                artifact generateSourcesJar
                pom.withXml {
                    groovy.util.Node rootNode = asNode()
                    Iterator nodeIt = rootNode.iterator()
                    while (nodeIt.hasNext()) {
                        groovy.util.Node item = (groovy.util.Node) nodeIt.next()
                        String nodeName = item.name().toString()
                        println("Publish2Maven: node---->: name=" + nodeName)
                        if (nodeName.endsWith("dependencies")) {
                            nodeIt.remove()
                            println("Publish2Maven: removeNode---->dependencies removed")
                        }
                    }

//                    groovy.util.Node dependenciesNode = asNode().appendNode('dependencies')
//                    project.configurations.implementation.allDependencies.each {
//                        if (it.name == "unspecified" || it.name != ARTIFACT_ID) {
//                            return
//                        }
//                        def dependencyNode = dependenciesNode.appendNode('dependency')
//                        dependencyNode.appendNode('groupId', it.group)
//                        dependencyNode.appendNode('artifactId', it.name)
//                        dependencyNode.appendNode('version', it.version)
//                    }

                }
            }
        }
    }
}